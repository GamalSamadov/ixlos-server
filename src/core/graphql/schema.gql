# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AuthorModel {
  country: String
  createdAt: DateTime!
  id: ID!
  updatedAt: DateTime!
  user: UserModel!
  userId: String!
}

type AuthorsPaginatedModel {
  authors: [AuthorModel!]!
  hasMore: Boolean!
}

type AyahModel {
  arabicText: String!
  createdAt: DateTime!
  id: ID!
  number: Float!
  surah: SurahModel!
  surahId: String!
  tafseers: [TafseerAyahModel!]!
  updatedAt: DateTime!
  uzbekText: String!
}

input CreateAuthorInput {
  country: String
  displayName: String
  email: String!
  password: String!
  username: String!
}

input CreateAyahInput {
  arabicText: String!
  number: Float!
  uzbekText: String!
}

input CreateSurahInput {
  arabicName: String!
  name: String!
  number: Float!
  revelationType: SurahRevelationType!
  totalAyahs: Float!
}

input CreateTafseerAyahInput {
  text: String!
}

input CreateTafseerInput {
  arabicName: String!
  filePath: String
  language: TafseerLanguage
  name: String!
  text: String!
}

input CreateUserInput {
  displayName: String
  email: String!
  password: String!
  username: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type DeviceModel {
  browser: String!
  os: String!
  type: String!
}

type LocationModel {
  city: String!
  country: String!
  latitude: Float!
  longitude: Float!
}

input LoginInput {
  login: String!
  password: String!
}

type Mutation {
  changeProfileAvatar(avatar: Upload!): Boolean!
  changeProfileAvatarByUserId(avatar: Upload!, userId: String!): Boolean!
  clearSessionCookie: Boolean!
  createAuthor(data: CreateAuthorInput!): AuthorModel!
  createAyah(data: CreateAyahInput!, surahId: String!): Boolean!
  createSurah(data: CreateSurahInput!): Boolean!
  createTafseer(authorId: String!, data: CreateTafseerInput!): Boolean!
  createTafseerAyah(ayahId: String!, data: CreateTafseerAyahInput!, tafseerId: String!): Boolean!
  createUser(data: CreateUserInput!): Boolean!
  deleteAuthor(id: String!): Boolean!
  deleteAyah(id: String!): Boolean!
  deleteSurah(id: String!): Boolean!
  deleteTafseer(id: String!): Boolean!
  deleteTafseerAyah(id: String!): Boolean!
  loginUser(data: LoginInput!): UserModel!
  logoutUser: Boolean!
  registerUser(data: CreateUserInput!): UserModel!
  removeProfileAvatar: Boolean!
  removeProfileAvatarByUserId(userId: String!): Boolean!
  removeSession(id: String!): Boolean!
  updateAuthor(data: UpdateAuthorInput!, id: String!): Boolean!
  updateAuthorBio(bio: String!, id: String!): Boolean!
  updateAyah(data: UpdateAyahInput!, id: String!, surahId: String!): Boolean!
  updateBioByUserId(bio: String!, userId: String!): Boolean!
  updatePasswordByUserId(data: UpdatePasswordInput!, userId: String!): Boolean!
  updateProfileInfoByUserId(data: UpdateProfileInfoInput!, userId: String!): Boolean!
  updateSurah(data: UpdateSurahInput!, id: String!): Boolean!
  updateTafseer(authorId: String!, data: UpdateTafseerInput!, id: String!): Boolean!
  updateTafseerAyah(ayahId: String!, data: UpdateTafseerAyahInput!, id: String!, tafseerId: String!): Boolean!
}

input PaginationInput {
  take: Float
}

type Query {
  getAllAuthors(pagination: PaginationInput!, searchTerm: String!): AuthorsPaginatedModel!
  getAllAyahs(pagination: PaginationInput!, surahId: String!): [AyahModel!]!
  getAllSurahs(pagination: PaginationInput!): [SurahModel!]!
  getAllTafseers: [TafseerModel!]!
  getAllUsers(pagination: PaginationInput!): [UserModel!]!
  getAuthorById(id: String!): AuthorModel!
  getAyahById(id: String!): AyahModel!
  getBioByUserId(userId: String!): String!
  getCurrentSession: SessionModel!
  getEmailByEmail(email: String!): String!
  getProfile: UserModel!
  getProfileById(id: String!): UserModel!
  getSessionsByUser: [SessionModel!]!
  getSurahById(id: String!): SurahModel!
  getTafseerAyahById: TafseerAyahModel!
  getTafseerById(id: String!): TafseerModel!
  getUsernameByUsername(username: String!): String!
  searchAyahByText(pagination: PaginationInput!, searchTerm: String!): [AyahModel!]!
}

enum Role {
  ADMIN
  AUTHOR
  USER
}

type SessionMetadataModel {
  device: DeviceModel!
  ip: String!
  location: LocationModel!
}

type SessionModel {
  createdAt: String!
  id: ID!
  metadata: SessionMetadataModel!
  rights: [Role!]!
  userId: String!
}

type SurahModel {
  arabicName: String!
  ayahs: [AyahModel!]!
  createdAt: DateTime!
  id: ID!
  name: String!
  number: Float!
  revelationType: SurahRevelationType!
  totalAyahs: Float!
  updatedAt: DateTime!
}

enum SurahRevelationType {
  MECCAN
  MEDINAN
}

type TafseerAyahModel {
  ayah: AyahModel!
  ayahId: String!
  createdAt: DateTime!
  id: ID!
  tafseer: TafseerModel!
  tafseerId: String!
  text: String!
  updatedAt: DateTime!
}

enum TafseerLanguage {
  ARABIC
  UZBEK
}

type TafseerModel {
  arabicName: String!
  author: AuthorModel!
  authorId: String!
  createdAt: DateTime!
  filePath: String!
  id: ID!
  language: TafseerLanguage!
  name: String!
  surahs: [SurahModel!]!
  text: String!
  updatedAt: DateTime!
}

input UpdateAuthorInput {
  bio: String
  country: String
  displayName: String
  email: String
  username: String
}

input UpdateAyahInput {
  arabicText: String
  number: Float
  uzbekText: String
}

input UpdatePasswordInput {
  newPassword: String!
  newPasswordRepeat: String!
  oldPassword: String!
}

input UpdateProfileInfoInput {
  displayName: String
  email: String!
  username: String!
}

input UpdateSurahInput {
  arabicName: String
  name: String
  number: Float
  revelationType: SurahRevelationType
  totalAyahs: Float
}

input UpdateTafseerAyahInput {
  text: String
}

input UpdateTafseerInput {
  arabicName: String
  filePath: String
  language: TafseerLanguage
  name: String
  text: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type UserModel {
  avatar: String
  bio: String
  createdAt: DateTime!
  displayName: String!
  email: String!
  id: ID!
  password: String!
  rights: [Role!]!
  updatedAt: DateTime!
  username: String!
}